.data_start

    .export miniScreenSystems
    .export mainSpeaker
    .export targetVideoPlayer
    .export videoControlCV
    .sync volume, none
    .sync playVideo, none

    __refl_const_intnl_udonTypeID: %SystemInt64, null
    __refl_const_intnl_udonTypeName: %SystemString, null
    targetVideoPlayer: %VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer, null
    videoControlCV: %UnityEngineGameObject, null
    mainSpeaker: %UnityEngineGameObject, null
    miniScreenSystems: %UnityEngineGameObjectArray, null
    mainAudioSources: %UnityEngineAudioSourceArray, null
    playVideo: %SystemBoolean, null
    volume: %SystemSingle, null
    mainVolumeSlider: %UnityEngineUISlider, null
    __0_this_intnl_UnityEngineGameObject: %UnityEngineGameObject, this
    __1_source_AudioSource: %UnityEngineAudioSource, null
    __0_source_AudioSource: %UnityEngineAudioSource, null
    __0_miniAudioSource_AudioSource: %UnityEngineAudioSource, null
    __0_mini_GameObject: %UnityEngineGameObject, null
    __0_muteToggle_Toggle: %UnityEngineUIToggle, null
    __1_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemString: %SystemString, null
    __2_const_intnl_SystemType: %SystemType, null
    __1_const_intnl_SystemType: %SystemType, null
    __0_const_intnl_SystemType: %SystemType, null
    __0_const_intnl_SystemUInt32: %SystemUInt32, null
    __13_intnl_SystemBoolean: %SystemBoolean, null
    __12_intnl_SystemBoolean: %SystemBoolean, null
    __11_intnl_SystemBoolean: %SystemBoolean, null
    __10_intnl_SystemBoolean: %SystemBoolean, null
    __9_intnl_SystemBoolean: %SystemBoolean, null
    __8_intnl_SystemBoolean: %SystemBoolean, null
    __7_intnl_SystemBoolean: %SystemBoolean, null
    __6_intnl_SystemBoolean: %SystemBoolean, null
    __5_intnl_SystemBoolean: %SystemBoolean, null
    __4_intnl_SystemBoolean: %SystemBoolean, null
    __3_intnl_SystemBoolean: %SystemBoolean, null
    __2_intnl_SystemBoolean: %SystemBoolean, null
    __1_intnl_SystemBoolean: %SystemBoolean, null
    __0_intnl_SystemBoolean: %SystemBoolean, null
    __5_intnl_SystemInt32: %SystemInt32, null
    __4_intnl_SystemInt32: %SystemInt32, null
    __3_intnl_SystemInt32: %SystemInt32, null
    __2_intnl_SystemInt32: %SystemInt32, null
    __1_intnl_SystemInt32: %SystemInt32, null
    __0_intnl_SystemInt32: %SystemInt32, null
    __4_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __3_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __2_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __1_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __0_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __0_intnl_returnTarget_UInt32: %SystemUInt32, null
    __1_intnl_VRCSDKBaseVRCPlayerApi: %VRCSDKBaseVRCPlayerApi, null
    __0_intnl_VRCSDKBaseVRCPlayerApi: %VRCSDKBaseVRCPlayerApi, null

.data_end

        
         #  using UdonSharp;
        
         #  using UnityEngine;
        
         #  using UnityEngine.UI;
        
         #  using VRC.SDK3.Video.Components.AVPro;
        
         #  using VRC.SDKBase;
        
         #  using VRC.Udon;
        
         #  public class VideoStreaming : UdonSharpBehaviour
.code_start
        
         #  [SerializeField]
        
         #  [SerializeField]
        
         #  private AudioSource[] mainAudioSources;
        
         #  [SerializeField]
        
         #  [SerializeField]
        
         #  private Slider mainVolumeSlider;
        
         #  [UdonSynced]
        
         #  [UdonSynced]
        
         #  private void Start()
    .export _start
        
    _start:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  mainVolumeSlider = videoControlCV.GetComponentInChildren<Slider>();
        PUSH, videoControlCV
        PUSH, __0_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __0_intnl_UnityEngineTransform
        PUSH, __0_const_intnl_SystemType
        PUSH, mainVolumeSlider
        EXTERN, "UnityEngineUISlider.__GetComponentInChildren__T"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void ToggleMute()
    .export ToggleMute
        
    ToggleMute:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  foreach (var mini in miniScreenSystems)
        PUSH, __0_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        COPY
        PUSH, miniScreenSystems
        PUSH, __1_intnl_SystemInt32
        EXTERN, "UnityEngineGameObjectArray.__get_Length__SystemInt32"
        PUSH, __0_intnl_SystemInt32
        PUSH, __1_intnl_SystemInt32
        PUSH, __0_intnl_SystemBoolean
        EXTERN, "SystemInt32.__op_LessThan__SystemInt32_SystemInt32__SystemBoolean"
        PUSH, __0_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000001A0
        PUSH, miniScreenSystems
        PUSH, __0_intnl_SystemInt32
        PUSH, __0_mini_GameObject
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  {
        
         #  AudioSource miniAudioSource = mini.GetComponentInChildren<AudioSource>();
        PUSH, __0_mini_GameObject
        PUSH, __1_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __1_intnl_UnityEngineTransform
        PUSH, __1_const_intnl_SystemType
        PUSH, __0_miniAudioSource_AudioSource
        EXTERN, "UnityEngineAudioSource.__GetComponentInChildren__T"
        
         #  Toggle muteToggle = mini.GetComponentInChildren<Toggle>();
        PUSH, __0_mini_GameObject
        PUSH, __2_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __2_intnl_UnityEngineTransform
        PUSH, __2_const_intnl_SystemType
        PUSH, __0_muteToggle_Toggle
        EXTERN, "UnityEngineUIToggle.__GetComponentInChildren__T"
        
         #  miniAudioSource.mute = muteToggle.isOn;
        PUSH, __0_muteToggle_Toggle
        PUSH, __1_intnl_SystemBoolean
        EXTERN, "UnityEngineUIToggle.__get_isOn__SystemBoolean"
        PUSH, __0_miniAudioSource_AudioSource
        PUSH, __1_intnl_SystemBoolean
        EXTERN, "UnityEngineAudioSource.__set_mute__SystemBoolean__SystemVoid"
        PUSH, __0_intnl_SystemInt32
        PUSH, __1_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        EXTERN, "SystemInt32.__op_Addition__SystemInt32_SystemInt32__SystemInt32"
        JUMP, 0x00000088
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void SetVolume()
    .export SetVolume
        
    SetVolume:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  volume = mainVolumeSlider.value;
        PUSH, mainVolumeSlider
        PUSH, volume
        EXTERN, "UnityEngineUISlider.__get_value__SystemSingle"
        
         #  Networking.SetOwner(Networking.LocalPlayer, this.gameObject);
        PUSH, __0_intnl_VRCSDKBaseVRCPlayerApi
        EXTERN, "VRCSDKBaseNetworking.__get_LocalPlayer__VRCSDKBaseVRCPlayerApi"
        PUSH, __0_intnl_VRCSDKBaseVRCPlayerApi
        PUSH, __0_this_intnl_UnityEngineGameObject
        EXTERN, "VRCSDKBaseNetworking.__SetOwner__VRCSDKBaseVRCPlayerApi_UnityEngineGameObject__SystemVoid"
        
         #  Debug.Log(volume);
        PUSH, volume
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        
         #  mainAudioSources = mainSpeaker.GetComponentsInChildren<AudioSource>();
        PUSH, mainSpeaker
        PUSH, __3_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __3_intnl_UnityEngineTransform
        PUSH, __1_const_intnl_SystemType
        PUSH, mainAudioSources
        EXTERN, "UnityEngineAudioSource.__GetComponentsInChildren__TArray"
        
         #  foreach (var source in mainAudioSources)
        PUSH, __0_const_intnl_SystemInt32
        PUSH, __2_intnl_SystemInt32
        COPY
        PUSH, mainAudioSources
        PUSH, __3_intnl_SystemInt32
        EXTERN, "UnityEngineAudioSourceArray.__get_Length__SystemInt32"
        PUSH, __2_intnl_SystemInt32
        PUSH, __3_intnl_SystemInt32
        PUSH, __2_intnl_SystemBoolean
        EXTERN, "SystemInt32.__op_LessThan__SystemInt32_SystemInt32__SystemBoolean"
        PUSH, __2_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000300
        PUSH, mainAudioSources
        PUSH, __2_intnl_SystemInt32
        PUSH, __0_source_AudioSource
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  source.volume = volume;
        PUSH, __0_source_AudioSource
        PUSH, volume
        EXTERN, "UnityEngineAudioSource.__set_volume__SystemSingle__SystemVoid"
        PUSH, __2_intnl_SystemInt32
        PUSH, __1_const_intnl_SystemInt32
        PUSH, __2_intnl_SystemInt32
        EXTERN, "SystemInt32.__op_Addition__SystemInt32_SystemInt32__SystemInt32"
        JUMP, 0x00000270
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public override void OnDeserialization()
    .export _onDeserialization
        
    _onDeserialization:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  Debug.Log(volume);
        PUSH, volume
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        
         #  mainAudioSources = mainSpeaker.GetComponentsInChildren<AudioSource>();
        PUSH, mainSpeaker
        PUSH, __4_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __4_intnl_UnityEngineTransform
        PUSH, __1_const_intnl_SystemType
        PUSH, mainAudioSources
        EXTERN, "UnityEngineAudioSource.__GetComponentsInChildren__TArray"
        
         #  foreach (var source in mainAudioSources)
        PUSH, __0_const_intnl_SystemInt32
        PUSH, __4_intnl_SystemInt32
        COPY
        PUSH, mainAudioSources
        PUSH, __5_intnl_SystemInt32
        EXTERN, "UnityEngineAudioSourceArray.__get_Length__SystemInt32"
        PUSH, __4_intnl_SystemInt32
        PUSH, __5_intnl_SystemInt32
        PUSH, __3_intnl_SystemBoolean
        EXTERN, "SystemInt32.__op_LessThan__SystemInt32_SystemInt32__SystemBoolean"
        PUSH, __3_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000420
        PUSH, mainAudioSources
        PUSH, __4_intnl_SystemInt32
        PUSH, __1_source_AudioSource
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  source.volume = volume;
        PUSH, __1_source_AudioSource
        PUSH, volume
        EXTERN, "UnityEngineAudioSource.__set_volume__SystemSingle__SystemVoid"
        PUSH, __4_intnl_SystemInt32
        PUSH, __1_const_intnl_SystemInt32
        PUSH, __4_intnl_SystemInt32
        EXTERN, "SystemInt32.__op_Addition__SystemInt32_SystemInt32__SystemInt32"
        JUMP, 0x00000390
        
         #  if (playVideo && !targetVideoPlayer.IsPlaying) targetVideoPlayer.Play();
        PUSH, playVideo
        PUSH, __3_intnl_SystemBoolean
        COPY
        PUSH, __3_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000004A8
        PUSH, targetVideoPlayer
        PUSH, __4_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __4_intnl_SystemBoolean
        PUSH, __5_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, __3_intnl_SystemBoolean
        PUSH, __5_intnl_SystemBoolean
        PUSH, __6_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_ConditionalAnd__SystemBoolean_SystemBoolean__SystemBoolean"
        PUSH, __6_intnl_SystemBoolean
        PUSH, __3_intnl_SystemBoolean
        COPY
        PUSH, __3_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000004D0
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Play__SystemVoid"
        JUMP, 0x00000578
        
         #  else if (!playVideo && targetVideoPlayer.IsPlaying) targetVideoPlayer.Pause();
        PUSH, playVideo
        PUSH, __8_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, __8_intnl_SystemBoolean
        PUSH, __7_intnl_SystemBoolean
        COPY
        PUSH, __7_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000558
        PUSH, targetVideoPlayer
        PUSH, __9_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __7_intnl_SystemBoolean
        PUSH, __9_intnl_SystemBoolean
        PUSH, __10_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_ConditionalAnd__SystemBoolean_SystemBoolean__SystemBoolean"
        PUSH, __10_intnl_SystemBoolean
        PUSH, __7_intnl_SystemBoolean
        COPY
        PUSH, __7_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000578
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Pause__SystemVoid"
        
         #  Debug.Log("PlayOrStop");
        PUSH, __0_const_intnl_SystemString
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        
         #  Debug.Log(targetVideoPlayer.IsPlaying);
        PUSH, targetVideoPlayer
        PUSH, __11_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __11_intnl_SystemBoolean
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void PlayOrStop()
    .export PlayOrStop
        
    PlayOrStop:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  playVideo = !targetVideoPlayer.IsPlaying;
        PUSH, targetVideoPlayer
        PUSH, __12_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __12_intnl_SystemBoolean
        PUSH, playVideo
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        
         #  Networking.SetOwner(Networking.LocalPlayer, this.gameObject);
        PUSH, __1_intnl_VRCSDKBaseVRCPlayerApi
        EXTERN, "VRCSDKBaseNetworking.__get_LocalPlayer__VRCSDKBaseVRCPlayerApi"
        PUSH, __1_intnl_VRCSDKBaseVRCPlayerApi
        PUSH, __0_this_intnl_UnityEngineGameObject
        EXTERN, "VRCSDKBaseNetworking.__SetOwner__VRCSDKBaseVRCPlayerApi_UnityEngineGameObject__SystemVoid"
        
         #  if (playVideo) targetVideoPlayer.Play();
        PUSH, playVideo
        JUMP_IF_FALSE, 0x0000064C
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Play__SystemVoid"
        JUMP, 0x0000065C
        
         #  else targetVideoPlayer.Pause();
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Pause__SystemVoid"
        
         #  Debug.Log("PlayOrStop");
        PUSH, __0_const_intnl_SystemString
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        
         #  Debug.Log(targetVideoPlayer.IsPlaying);
        PUSH, targetVideoPlayer
        PUSH, __13_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __13_intnl_SystemBoolean
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
.code_end
