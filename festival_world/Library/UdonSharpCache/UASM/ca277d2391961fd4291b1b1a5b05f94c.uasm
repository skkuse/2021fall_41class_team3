.data_start

    .export miniAudioSource
    .export mainAudioSource
    .export targetVideoPlayer
    .export videoControlCV

    __refl_const_intnl_udonTypeID: %SystemInt64, null
    __refl_const_intnl_udonTypeName: %SystemString, null
    miniAudioSource: %UnityEngineAudioSource, null
    mainAudioSource: %UnityEngineAudioSourceArray, null
    targetVideoPlayer: %VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer, null
    videoControlCV: %UnityEngineGameObject, null
    mainVolumeSlider: %UnityEngineUISlider, null
    __0_source_AudioSource: %UnityEngineAudioSource, null
    __1_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemString: %SystemString, null
    __0_const_intnl_SystemType: %SystemType, null
    __0_const_intnl_SystemUInt32: %SystemUInt32, null
    __5_intnl_SystemBoolean: %SystemBoolean, null
    __4_intnl_SystemBoolean: %SystemBoolean, null
    __3_intnl_SystemBoolean: %SystemBoolean, null
    __2_intnl_SystemBoolean: %SystemBoolean, null
    __1_intnl_SystemBoolean: %SystemBoolean, null
    __0_intnl_SystemBoolean: %SystemBoolean, null
    __1_intnl_SystemInt32: %SystemInt32, null
    __0_intnl_SystemInt32: %SystemInt32, null
    __0_intnl_SystemSingle: %SystemSingle, null
    __0_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __0_intnl_returnTarget_UInt32: %SystemUInt32, null

.data_end

        
         #  using UdonSharp;
        
         #  using UnityEngine;
        
         #  using UnityEngine.UI;
        
         #  using VRC.SDK3.Video.Components.AVPro;
        
         #  using VRC.SDKBase;
        
         #  using VRC.Udon;
        
         #  public class VideoStreaming : UdonSharpBehaviour
.code_start
        
         #  [SerializeField]
        
         #  [SerializeField]
        
         #  [SerializeField]
        
         #  [SerializeField]
        
         #  private Slider mainVolumeSlider;
        
         #  private void Start()
    .export _start
        
    _start:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  mainVolumeSlider = videoControlCV.GetComponentInChildren<Slider>();
        PUSH, videoControlCV
        PUSH, __0_intnl_UnityEngineTransform
        EXTERN, "UnityEngineGameObject.__get_transform__UnityEngineTransform"
        PUSH, __0_intnl_UnityEngineTransform
        PUSH, __0_const_intnl_SystemType
        PUSH, mainVolumeSlider
        EXTERN, "UnityEngineUISlider.__GetComponentInChildren__T"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void ToggleMute()
    .export ToggleMute
        
    ToggleMute:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  miniAudioSource.mute = !miniAudioSource.mute;
        PUSH, miniAudioSource
        PUSH, __0_intnl_SystemBoolean
        EXTERN, "UnityEngineAudioSource.__get_mute__SystemBoolean"
        PUSH, __0_intnl_SystemBoolean
        PUSH, __1_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, miniAudioSource
        PUSH, __1_intnl_SystemBoolean
        EXTERN, "UnityEngineAudioSource.__set_mute__SystemBoolean__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void SetVolume()
    .export SetVolume
        
    SetVolume:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  foreach(var source in mainAudioSource)
        PUSH, __0_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        COPY
        PUSH, mainAudioSource
        PUSH, __1_intnl_SystemInt32
        EXTERN, "UnityEngineAudioSourceArray.__get_Length__SystemInt32"
        PUSH, __0_intnl_SystemInt32
        PUSH, __1_intnl_SystemInt32
        PUSH, __2_intnl_SystemBoolean
        EXTERN, "SystemInt32.__op_LessThan__SystemInt32_SystemInt32__SystemBoolean"
        PUSH, __2_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000194
        PUSH, mainAudioSource
        PUSH, __0_intnl_SystemInt32
        PUSH, __0_source_AudioSource
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  source.volume = mainVolumeSlider.value;
        PUSH, mainVolumeSlider
        PUSH, __0_intnl_SystemSingle
        EXTERN, "UnityEngineUISlider.__get_value__SystemSingle"
        PUSH, __0_source_AudioSource
        PUSH, __0_intnl_SystemSingle
        EXTERN, "UnityEngineAudioSource.__set_volume__SystemSingle__SystemVoid"
        PUSH, __0_intnl_SystemInt32
        PUSH, __1_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        EXTERN, "SystemInt32.__op_Addition__SystemInt32_SystemInt32__SystemInt32"
        JUMP, 0x000000EC
        
         #  Debug.Log(mainVolumeSlider.value);
        PUSH, mainVolumeSlider
        PUSH, __0_intnl_SystemSingle
        EXTERN, "UnityEngineUISlider.__get_value__SystemSingle"
        PUSH, __0_intnl_SystemSingle
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void PlayOrStop()
    .export PlayOrStop
        
    PlayOrStop:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  if (!targetVideoPlayer.IsPlaying) targetVideoPlayer.Play();
        PUSH, targetVideoPlayer
        PUSH, __3_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __3_intnl_SystemBoolean
        PUSH, __4_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, __4_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000230
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Play__SystemVoid"
        JUMP, 0x00000240
        
         #  else targetVideoPlayer.Pause();
        PUSH, targetVideoPlayer
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__Pause__SystemVoid"
        
         #  Debug.Log("PlayOrStop");
        PUSH, __0_const_intnl_SystemString
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        
         #  Debug.Log(targetVideoPlayer.IsPlaying);
        PUSH, targetVideoPlayer
        PUSH, __5_intnl_SystemBoolean
        EXTERN, "VRCSDK3VideoComponentsBaseBaseVRCVideoPlayer.__get_IsPlaying__SystemBoolean"
        PUSH, __5_intnl_SystemBoolean
        EXTERN, "UnityEngineDebug.__Log__SystemObject__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
.code_end
